[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "CASA00025 Group Project",
    "section": "",
    "text": "This project develops an interactive web application using Google Earth Engine (GEE) to map vineyard suitability across the United Kingdom from 2010 to 2023. Environmental factors (GST, GDD, GSP, slope, elevation) are extracted from TerraClimate and SRTM datasets. Suitability masks are generated by applying literature-based thresholds with moderate adjustments for natural variability. A Random Forest model, trained on vineyard sample points, predicts high-potential areas. The platform features dynamic map layers, regional comparison tools, and time-series analysis, providing a flexible, user-friendly interface to support evidence-based viticulture planning under changing climate conditions.\n\n\n\n\nRecent studies have shown that between 1981 and 2018, growing season temperatures in key UK viticulture regions increased by approximately 1°C, with GST values now exceeding 14°C, facilitating the expansion of vineyards and the diversification of grape varieties (Nesbitt et al., 2022). Climate change is projected to further alter temperature, precipitation, and seasonal patterns, impacting the spatial distribution, productivity, and sustainability of viticulture (Fraga et al., 2013). These environmental shifts highlight the urgent need for dynamic, data-driven tools that integrate climatic and topographic variables to support vineyard planning and agricultural decision-making under future climate scenarios.\n\n\n\nClimate change has significantly impacted viticultural suitability, creating new opportunities for UK wine production. Recent projections show that warming trends will improve conditions for varieties like Pinot Noir in the UK by 2040 (Nesbitt et al., 2022). Suitability models suggest increasing investment potential and climate resilience in England and Wales (Nesbitt et al., 2018). Early discussions on the evolution of UK wine quality laid a foundation for understanding these shifts (Unwin, 1991). Broader European analyses reveal uncertainties in future viticultural zoning under climate scenarios (Fraga et al., 2013). Remote sensing studies further highlight the importance of multi-source environmental data in capturing climate-driven suitability changes (Bai et al., 2022). Building on these insights, our project integrates remote sensing datasets with machine learning techniques to dynamically map and predict vineyard suitability, providing a scalable, data-driven tool for spatial analysis under changing environmental conditions.\n\n\n\n\nThis project addresses the challenge of identifying optimal regions for grape vineyard cultivation in the United Kingdom by integrating multiple environmental and climatic factors. Traditional approaches often rely on expert intuition or static suitability maps, lacking dynamic, data-driven analysis. In the context of evolving climatic conditions, there is a critical need for an interactive tool that combines historical records, remote sensing data, and machine learning techniques. Our application enables users to dynamically assess vineyard suitability across spatial and temporal scales, providing a more adaptive, evidence-based framework for land use planning and agricultural investment decisions.\n\n\n\nThe application is designed for vineyard developers. It enables users to explore vineyard suitability across the UK, making predictions based on environmental factors such as temperature, elevation, and slope. By offering spatial and temporal insights, the tool helps optimize land selection, support climate adaptation, and reduce investment risks. Its intuitive interface ensures accessibility even for users without technical GIS expertise. Additionally, by interviewing investors interested in establishing vineyards in the UK, we collected key insights into ideal growing conditions. Investors prioritize stable climates and seek regions suitable for cultivating high-quality grape varieties, further informing the application’s focus and design.\n\n\n\n\nRecords of communication with users\n\n\n\n\n\n\n\nSummary of datasets used.\n\n\n\n\n\n\nVariable\nDataset Source\n\n\n\n\nTemperature\nMODIS/006/MOD11A2 — MODIS Land Surface Temperature and Emissivity\n\n\nGST (Growing Season Temperature)\nTerraClimate — IDAHO_EPSCOR/TERRACLIMATE\n\n\nGDD (Growing Degree Days)\nTerraClimate — IDAHO_EPSCOR/TERRACLIMATE\n\n\nGSP (Growing Season Precipitation)\nTerraClimate — IDAHO_EPSCOR/TERRACLIMATE\n\n\nSlope\nUSGS/SRTMGL1_003 — NASA SRTM Digital Elevation 30m\n\n\nElevation\nJAXA/ALOS/AW3D30/V2_2 — ALOS\n\n\nExisting Vineyard\nExported from OpenStreetMap (OSM)\n\n\nLand Use\nLand Cover Map 10m — UK Centre for Ecology & Hydrology\n\n\n\n\n\n\n\n\n\nMethodology Workflow\n\n\nEnvironmental datasets are first preprocessed by applying thresholds for temperature, precipitation, elevation, solar radiation, and vegetation cover. Key environmental features are then stacked, and stratified sampling is used to generate positive (vineyard) and negative (unsuitable) training data for a Random Forest classifier, effectively distinguishing suitable and unsuitable areas. The model predicts continuous suitability scores, identifying regions with scores above 70% as highly suitable, and achieves high predictive accuracy validated through cross-validation. Predictions support county-level selections, user-defined custom polygons, and regional comparisons. Time-series analyses from 2010 to 2023 allow users to explore spatial and temporal shifts in vineyard suitability under changing environmental conditions.\n\n\n\nThe application features a modular, panel-based interface designed for clarity, interactivity, and user-friendliness. Module 1 allows users to select any UK county to view historical trends in vineyard suitability. Module 2 enables users to draw custom polygons on a map and generate suitability prediction results. Additionally, this module supports side-by-side comparisons of two different areas, helping users understand spatial variability. Results are displayed through interactive maps, dynamically updating area charts, and easy-to-read statistics. The entire interface is built using Earth Engine’s UI tools to ensure smooth interaction even with large datasets.\n\n\n\n\nReplace the link below with the link to your application.\n\n\n\n\n\n\n\n\n\nvar countries = ee.FeatureCollection(\"USDOS/LSIB_SIMPLE/2017\");\nvar UK_boundary = countries.filter(ee.Filter.eq(\"country_na\", \"United Kingdom\"));\nMap.centerObject(UK_boundary, 6);\nThis project focuses on the United Kingdom. Five environmental variables were selected based on literature thresholds:\nGST 14.1–15.5°C (Nesbitt et al., 2022),\nGDD 974–1223°C·days (Nesbitt et al., 2022),\nGSP 273–540mm (Nesbitt et al., 2022),\nSlope 5–10% (Fraga et al., 2018),\nElevation 0–220m (Unwin, 1991).\nLandsat 8 imagery was clipped to the UK boundary and masks were generated with moderate threshold adjustments.\nvar gstMask = gst.gte(14.0).and(gst.lte(16.0));\nvar gddMask = gdd.gte(950).and(gdd.lte(1250));\nvar gspMask = gsp.gte(250).and(gsp.lte(600));\nvar slopeMask = slope.gte(2).and(slope.lte(15));\nvar elevationMask = elevation.gte(5).and(elevation.lte(250));\n\n\n\n\n\n\nGSD Map\n\n\n\n\n\n\n\nSlope Map\n\n\n\n\n\n\n\nElevation Map\n\n\n\n\n\n\n\n\n\nGDD Map\n\n\n\n\n\n\n\nGSP Map\n\n\n\n\n\n\n\nLand Use Map\n\n\n\n\n\nLand cover was reclassified to retain grassland, shrubland, and cropland.\nAll masks were combined using logical AND operations to select suitable areas.\n\n\n\nEnvironmental factors (GST, GDD, GSP, slope, elevation, aspect, latitude) are extracted for the selected region and year from TerraClimate and SRTM datasets. These variables capture key climatic and topographic conditions affecting vineyard growth.\nvar factors = GrapeML.computeEnvironmentalFactors(region, year);\nA binary suitability mask is generated by applying defined threshold filters to the extracted factors. This step pre-screens environmentally favorable zones before machine learning.\nvar suitabilityMask = GrapeML.computeSuitabilityMask(factors);\nPositive samples are randomly generated within vineyard areas, while negative samples are drawn from unsuitable regions identified by the inverted mask. Samples are labeled and split randomly into 70% training and 30% testing subsets to ensure robust model evaluation.\nvar positivePoints = ee.FeatureCollection.randomPoints({region: vineyards.geometry(), points: 200});\nvar negativePoints = ee.FeatureCollection.randomPoints({region: region, points: 400});\nA Random Forest classifier with 50 trees is trained on the training data.\nvar classifier = ee.Classifier.smileRandomForest({numberOfTrees: 50}).train({...});\nThe trained classifier predicts a suitability probability surface across the study region. Pixels with scores above 0.7 are identified as highly suitable for vineyard development.\nvar suitabilityScore = featureImage.classify(probabilityClassifier);\nIf sample generation is insufficient, the basic environmental mask serves as a fallback to maintain prediction stability.\n\n\n\n\n\nIt supports users to freely switch between counties to view the 2010-2023 suitability area trend map, and loads all UK (county) suitability data asynchronously in the background to improve the speed of user experience.\nfunction initializeRegions() {\n  \n  // Build the initial UI\n  rebuildMainPanel()\n  // Start asynchronous background loading\n  continueLoadingRegions(0, kentIndex)\n}\n\n\n// Rebuild the main panel to display current region data\nfunction rebuildMainPanel() {\n  // Build UI controls\n  countyInput = ui.Textbox({value: currentCountyName})\n  \n  // Process current region data\n  currentRegion = getRegionGeometry(currentCountyName)\n  updateRegion()\n}\n\n// Update region data and trend chart\nfunction updateRegion() {\n  \n  // Create a batch of year data\n  var years = [2010...2023]\n  processBatch(0)\n  \n  // Batch processing: compute suitable area for each year\n  function processBatch(startIdx) {...\n    })\n}\n\nfunction showCountyTable() {\n  // Create a button grid for region selection\n  var grid = ui.Panel({layout: ui.Panel.Layout.flow('vertical')})\n  \n  // Add a button for each region\n  suitableNames.forEach(function(name) {\n    var button = ui.Button({\n      label: name,\n      onClick: function() {\n        currentCountyName = name\n        rebuildMainPanel()\n      }\n    })\n    grid.add(button)\n  })\n  \n  controlPanel.add(grid)\n}\n\n\n\nSelect County\n\n\n\n\n\n2010-2023 suitability area trend map\n\n\n\n\n\nProvides detailed layer controls to show/hide area boundaries, suitable areas, and existing vineyards.\n  var legendPanel = ui.Panel({\n    layout: ui.Panel.Layout.flow('vertical'),\n    style: {\n      padding: '8px',\n      margin: '0 0 8px 0',\n      backgroundColor: 'white'\n    }\n  });\n\n  checkboxRegion = ui.Checkbox({\n    label: '', \n    value: true, \n    onChange: function() {\n      showLoading(\"Updating map...\");\n      ee.Number(1).evaluate(function() {\n        updateRegion();\n        hideLoading();\n      });\n    }\n  });\n  var regionRow = ui.Panel([checkboxRegion, createLegendRow('orange', 'Region Boundary')], \n    ui.Panel.Layout.flow('horizontal'));\n  legendPanel.add(regionRow);\n\n  checkboxSuitability = ui.Checkbox({\n    label: '', \n    value: true, \n    onChange: function() {\n      showLoading(\"Updating map...\");\n      ee.Number(1).evaluate(function() {\n        updateRegion();\n        hideLoading();\n      });\n    }\n  });\n  var suitabilityRow = ui.Panel([checkboxSuitability, createLegendRow('#00FF00', 'Suitable Planting Areas')],\n    ui.Panel.Layout.flow('horizontal'));\n  legendPanel.add(suitabilityRow);\n\n  checkboxVineyards = ui.Checkbox({\n    label: '', \n    value: true, \n    onChange: function() {\n      showLoading(\"Updating map...\");\n      ee.Number(1).evaluate(function() {\n        updateRegion();\n        hideLoading();\n      });\n    }\n  });\n  var vineyardsRow = ui.Panel([checkboxVineyards, createLegendRow('purple', 'Existing Vineyards (2023)')],\n    ui.Panel.Layout.flow('horizontal'));\n  legendPanel.add(vineyardsRow);\n\n\n\nLayer Control\n\n\n\n\n\nAllows switching between single-year and multi-year analysis modes, resulting in a visualisation of suitable areas on a map. The multi-year analysis filters out areas on the map that are suitable for all years.\nvar singleYearButton = ui.Button({\n  label: 'Single Year View',\n  onClick: function() {\n    modeSelect = 'Single Year';\n    updateViewMode();\n  }\n});\n\nvar multiYearButton = ui.Button({\n  label: 'Multi-Year Analysis',\n  onClick: function() {\n    modeSelect = 'Multi-Year';\n    updateViewMode();\n  }\n});\n\n\n\n2015-2023 Muti-year Analysis\n\n\n\n\n\n\n\n\nSupports users to freely draw any area (e.g. rectangle, polygon) on the map, save and manage multiple custom-drawn areas.\n// Configure drawing tools\n  var drawingTools = mapPanel.drawingTools();\n  drawingTools.setLinked(false);\n  drawingTools.setDrawModes(['rectangle', 'polygon']);\n  drawingTools.setShown(false);\n  \n  // Add button to start drawing\n  var startDrawingButton = ui.Button('Start Drawing Region', function() {\n    drawingTools.layers().reset();\n    drawingTools.setShown(true);\n    drawingTools.setDrawModes(['polygon']);\n    drawingTools.setShape('polygon');\n    drawingTools.draw();\n    \n    showLoading(\"Please draw a region on the map\");\n    ee.Number(1).evaluate(function() {\n      hideLoading();\n    });\n  });\n  \n  var saveButton = ui.Button('Save Region', function() {\n    var drawn = drawingTools.layers().get(0);\n    if (!drawn) {\n      showLoading(\"Please draw a region first\");\n      ee.Number(1).evaluate(function() {\n        hideLoading();\n      });\n      return;\n    }\n    var geom = drawn.toGeometry();\n    var regionIndex = savedCompareGeometries.length + 1;\n    savedCompareGeometries.push(geom);\n    mapPanel.addLayer(geom, {color: 'blue'}, 'Comparison Region ' + regionIndex);\n    drawingTools.layers().reset();\n    drawingTools.setShown(false);\n    \n    showLoading(\"Region saved, please click 'Analyze Selected Region' button to analyze\");\n    ee.Number(1).evaluate(function() {\n      hideLoading();\n    });\n  });\n  \n  var analyzeButton = ui.Button('Analyze Selected Region', function() {\n    if (savedCompareGeometries.length === 0) {\n      showLoading(\"Please draw and save a region first\");\n      ee.Number(1).evaluate(function() {\n        hideLoading();\n      });\n\n\n\nDrawing Area\n\n\n\n\n\nFor each mapped area, a trend map of the area of suitability for each area was generated as well as providing the area of suitable planting and the area of highly suitable areas (&gt;70%) in 2023.\n// Get most recently saved region\n    var regionIndex = savedCompareGeometries.length;\n    var region = savedCompareGeometries[regionIndex - 1];\n    \n    showLoading(\"Analyzing region \" + regionIndex + \"...\");\n    \n    // Analyze suitability change of the region (2020-2023)\n    var years = [2020, 2021, 2022, 2023];\n    var yearResults = {};\n    var totalYears = years.length;\n    var processedYears = 0;\n    \n    // Analyze basic suitability for each year\n    years.forEach(function(year) {\n      // Use simple filtering conditions to calculate suitability area\n      var suitableMask = computeBasicSuitability(region, String(year));\n      \n      // Calculate suitable area size\n      suitableMask.multiply(ee.Image.pixelArea()).reduceRegion({\n        reducer: ee.Reducer.sum(),\n        geometry: region,\n        scale: 250,\n        maxPixels: 1e10\n      }).evaluate(function(result) {\n        var area = result ? result.mask / 1e6 : 0;\n        \n        yearResults[year] = {\n          suitable_area: area\n        };\n\n\n\nTrend and Statistical Analyses\n\n\n\n\n\nSupports detailed comparisons between two areas, outputs area comparison tables and text summaries (who is more suitable, who has more highly suitable area, etc.).\n // Get results of the last two regions\n      var region1Results = areaResults['region' + (savedCompareGeometries.length - 1)];\n      var region2Results = areaResults['region' + savedCompareGeometries.length];\n      \n      if (!region1Results || !region2Results) {\n        hideLoading();\n        showLoading(\"Unable to retrieve region data, please re-analyze\");\n        ee.Number(1).evaluate(function() {\n          hideLoading();\n        });\n        return;\n      }\n      \n      // Create comparison panel\n      var comparisonPanel = ui.Panel({\n        layout: ui.Panel.Layout.flow('vertical'),\n        style: {width: '100%', padding: '8px', border: '1px solid #ddd'}\n      });\n      \n      comparisonPanel.add(ui.Label('Region Comparison (2023)', {\n        fontWeight: 'bold',\n        textAlign: 'center',\n        margin: '0 0 8px 0'\n      }));\n      \n      // Create comparison table\n      var table = ui.Panel({\n        layout: ui.Panel.Layout.flow('vertical'),\n        style: {width: '100%'}\n      });\n// Add conclusion panel\n      var conclusionPanel = ui.Panel({\n        layout: ui.Panel.Layout.flow('vertical'),\n        style: {width: '100%', margin: '8px 0 0 0', padding: '8px', backgroundColor: '#f9f9f9'}\n      });\n      \n      var conclusion = '';\n      if (region1Results[2023].suitable_area &gt; region2Results[2023].suitable_area) {\n        conclusion = 'Region ' + (savedCompareGeometries.length - 1) + ' has a larger suitable planting area.\\n';\n      } else {\n        conclusion = 'Region ' + savedCompareGeometries.length + ' has a larger suitable planting area.\\n';\n      }\n      \n      var highSuitConclusion = '';\n      if (region1Results[2023].high_suitable_area &gt; region2Results[2023].high_suitable_area) {\n        highSuitConclusion = 'Region ' + (savedCompareGeometries.length - 1) + ' has a larger high suitability area,';\n        highSuitConclusion += ' ' + Math.abs(highSuitableDiff).toFixed(2) + 'km² more than region ' + savedCompareGeometries.length;\n      } else {\n        highSuitConclusion = 'Region ' + savedCompareGeometries.length + ' has a larger high suitability area,';\n        highSuitConclusion += ' ' + Math.abs(highSuitableDiff).toFixed(2) + 'km² more than region ' + (savedCompareGeometries.length - 1);\n      }\n      \n      conclusionPanel.add(ui.Label('Conclusion:', {fontWeight: 'bold'}));\n      conclusionPanel.add(ui.Label(conclusion));\n      conclusionPanel.add(ui.Label(highSuitConclusion, {color: '#D81B60', fontWeight: 'bold'}));\n      \n      comparisonPanel.add(conclusionPanel);\n\n\n\nSelect Two Areas\n\n\n\n\n\nComparison\n\n\n\n\n\n\n\nFeedback: The interface shows loading prompts like “Analyzing region…” to keep users informed of progress. Usability: The intuitive layout, with a fixed right panel and bottom-left legend, ensures easy navigation. Custom area selection includes clear instructions for quick user onboarding. Aesthetics: Functions are clearly separated, and high-contrast map layers, interactive charts, and color-coded maps improve data visualization. Consistency: Consistent styles across layers, buttons, and interactions, with uniform color schemes in the legend, aid map interpretation. Flexibility: Supports predefined county selections and user-drawn areas, with flexible switching between single-year and multi-year views for analysis.\n\n\n\nAsynchronous Loading: In order to increase the loading speed, the asynchronous loading method is chosen, but this requires a high level of user operation. The user needs to wait for the current operation to finish loading before proceeding to the next operation, otherwise it may lead to the error of loading the result multiple times.\nInsufficient machine learning training data: The current training sample size is relatively limited, which may lead to a decrease in prediction accuracy.\nLagging vineyard area data: The existing vineyard area data from OSM (Open Street Map) has some lag and incompleteness, which may affect the accuracy of the results.\n\n\n\nExpanding site selection factors: When selecting sites and comparing sites, more factors beyond the vineyard environment need to be considered, such as accessibility, regulations, and the surrounding environment. Grape Variety Classification: Implement classification of different grape varieties to enable more targeted vineyard area analysis and selection.\n\n\n\nBai, Huiqing; Sun, Zhongxiang; Yao, Xuenan; Kong, Junhua; Wang, Yongjian; Zhang, Xiaoyu; Chen, Weiping; Fan, Peige; Li, Shaohua; Liang, Zhenchang. (2022) Viticultural Suitability Analysis Based on Multi-Source Data Highlights Climate-Change-Induced Decrease in Potential Suitable Areas: A Case Analysis in Ningxia, China. Remote sensing (Basel, Switzerland). 14 (15), 3717-.\nFraga, H; Malheiro, A C; Moutinho-pereira, J; Santos, J A. (2013) Future scenarios for viticultural zoning in Europe: ensemble projections and uncertainties. International journal of biometeorology. 57 (6), 909–925.\nNesbitt, Alistair, Dorling, Stephen, Jones, Richard, Smith, Dan K. E., Krumins, Marcus, Gannon, Kate E., Dorling, Lewis, Johnson, Zoë and Conway, Declan (2022) Climate change projections for UK viticulture to 2040: A focus on improving suitability for Pinot Noir. OENO On, 56 (3). 69–87.\nNesbitt, A., Dorling, S. and Lovett, A. (2018) ‘A suitability model for viticulture in England and Wales: opportunities for investment, sector growth and increased climate resilience’, Journal of Land Use Science, 13(4), pp. 414–438.\nUnwin, T. (1991) UK wine: from table wines to quality wine? Journal of wine research. 2 (2), 143–150."
  },
  {
    "objectID": "index.html#project-summary",
    "href": "index.html#project-summary",
    "title": "CASA00025 Group Project",
    "section": "",
    "text": "This project develops an interactive web application using Google Earth Engine (GEE) to map vineyard suitability across the United Kingdom from 2010 to 2023. Environmental factors (GST, GDD, GSP, slope, elevation) are extracted from TerraClimate and SRTM datasets. Suitability masks are generated by applying literature-based thresholds with moderate adjustments for natural variability. A Random Forest model, trained on vineyard sample points, predicts high-potential areas. The platform features dynamic map layers, regional comparison tools, and time-series analysis, providing a flexible, user-friendly interface to support evidence-based viticulture planning under changing climate conditions.\n\n\n\n\nRecent studies have shown that between 1981 and 2018, growing season temperatures in key UK viticulture regions increased by approximately 1°C, with GST values now exceeding 14°C, facilitating the expansion of vineyards and the diversification of grape varieties (Nesbitt et al., 2022). Climate change is projected to further alter temperature, precipitation, and seasonal patterns, impacting the spatial distribution, productivity, and sustainability of viticulture (Fraga et al., 2013). These environmental shifts highlight the urgent need for dynamic, data-driven tools that integrate climatic and topographic variables to support vineyard planning and agricultural decision-making under future climate scenarios.\n\n\n\nClimate change has significantly impacted viticultural suitability, creating new opportunities for UK wine production. Recent projections show that warming trends will improve conditions for varieties like Pinot Noir in the UK by 2040 (Nesbitt et al., 2022). Suitability models suggest increasing investment potential and climate resilience in England and Wales (Nesbitt et al., 2018). Early discussions on the evolution of UK wine quality laid a foundation for understanding these shifts (Unwin, 1991). Broader European analyses reveal uncertainties in future viticultural zoning under climate scenarios (Fraga et al., 2013). Remote sensing studies further highlight the importance of multi-source environmental data in capturing climate-driven suitability changes (Bai et al., 2022). Building on these insights, our project integrates remote sensing datasets with machine learning techniques to dynamically map and predict vineyard suitability, providing a scalable, data-driven tool for spatial analysis under changing environmental conditions.\n\n\n\n\nThis project addresses the challenge of identifying optimal regions for grape vineyard cultivation in the United Kingdom by integrating multiple environmental and climatic factors. Traditional approaches often rely on expert intuition or static suitability maps, lacking dynamic, data-driven analysis. In the context of evolving climatic conditions, there is a critical need for an interactive tool that combines historical records, remote sensing data, and machine learning techniques. Our application enables users to dynamically assess vineyard suitability across spatial and temporal scales, providing a more adaptive, evidence-based framework for land use planning and agricultural investment decisions.\n\n\n\nThe application is designed for vineyard developers. It enables users to explore vineyard suitability across the UK, making predictions based on environmental factors such as temperature, elevation, and slope. By offering spatial and temporal insights, the tool helps optimize land selection, support climate adaptation, and reduce investment risks. Its intuitive interface ensures accessibility even for users without technical GIS expertise. Additionally, by interviewing investors interested in establishing vineyards in the UK, we collected key insights into ideal growing conditions. Investors prioritize stable climates and seek regions suitable for cultivating high-quality grape varieties, further informing the application’s focus and design.\n\n\n\n\nRecords of communication with users\n\n\n\n\n\n\n\nSummary of datasets used.\n\n\n\n\n\n\nVariable\nDataset Source\n\n\n\n\nTemperature\nMODIS/006/MOD11A2 — MODIS Land Surface Temperature and Emissivity\n\n\nGST (Growing Season Temperature)\nTerraClimate — IDAHO_EPSCOR/TERRACLIMATE\n\n\nGDD (Growing Degree Days)\nTerraClimate — IDAHO_EPSCOR/TERRACLIMATE\n\n\nGSP (Growing Season Precipitation)\nTerraClimate — IDAHO_EPSCOR/TERRACLIMATE\n\n\nSlope\nUSGS/SRTMGL1_003 — NASA SRTM Digital Elevation 30m\n\n\nElevation\nJAXA/ALOS/AW3D30/V2_2 — ALOS\n\n\nExisting Vineyard\nExported from OpenStreetMap (OSM)\n\n\nLand Use\nLand Cover Map 10m — UK Centre for Ecology & Hydrology\n\n\n\n\n\n\n\n\n\nMethodology Workflow\n\n\nEnvironmental datasets are first preprocessed by applying thresholds for temperature, precipitation, elevation, solar radiation, and vegetation cover. Key environmental features are then stacked, and stratified sampling is used to generate positive (vineyard) and negative (unsuitable) training data for a Random Forest classifier, effectively distinguishing suitable and unsuitable areas. The model predicts continuous suitability scores, identifying regions with scores above 70% as highly suitable, and achieves high predictive accuracy validated through cross-validation. Predictions support county-level selections, user-defined custom polygons, and regional comparisons. Time-series analyses from 2010 to 2023 allow users to explore spatial and temporal shifts in vineyard suitability under changing environmental conditions.\n\n\n\nThe application features a modular, panel-based interface designed for clarity, interactivity, and user-friendliness. Module 1 allows users to select any UK county to view historical trends in vineyard suitability. Module 2 enables users to draw custom polygons on a map and generate suitability prediction results. Additionally, this module supports side-by-side comparisons of two different areas, helping users understand spatial variability. Results are displayed through interactive maps, dynamically updating area charts, and easy-to-read statistics. The entire interface is built using Earth Engine’s UI tools to ensure smooth interaction even with large datasets."
  },
  {
    "objectID": "index.html#the-application",
    "href": "index.html#the-application",
    "title": "CASA00025 Group Project",
    "section": "",
    "text": "Replace the link below with the link to your application."
  },
  {
    "objectID": "index.html#how-it-works",
    "href": "index.html#how-it-works",
    "title": "CASA00025 Group Project",
    "section": "",
    "text": "var countries = ee.FeatureCollection(\"USDOS/LSIB_SIMPLE/2017\");\nvar UK_boundary = countries.filter(ee.Filter.eq(\"country_na\", \"United Kingdom\"));\nMap.centerObject(UK_boundary, 6);\nThis project focuses on the United Kingdom. Five environmental variables were selected based on literature thresholds:\nGST 14.1–15.5°C (Nesbitt et al., 2022),\nGDD 974–1223°C·days (Nesbitt et al., 2022),\nGSP 273–540mm (Nesbitt et al., 2022),\nSlope 5–10% (Fraga et al., 2018),\nElevation 0–220m (Unwin, 1991).\nLandsat 8 imagery was clipped to the UK boundary and masks were generated with moderate threshold adjustments.\nvar gstMask = gst.gte(14.0).and(gst.lte(16.0));\nvar gddMask = gdd.gte(950).and(gdd.lte(1250));\nvar gspMask = gsp.gte(250).and(gsp.lte(600));\nvar slopeMask = slope.gte(2).and(slope.lte(15));\nvar elevationMask = elevation.gte(5).and(elevation.lte(250));\n\n\n\n\n\n\nGSD Map\n\n\n\n\n\n\n\nSlope Map\n\n\n\n\n\n\n\nElevation Map\n\n\n\n\n\n\n\n\n\nGDD Map\n\n\n\n\n\n\n\nGSP Map\n\n\n\n\n\n\n\nLand Use Map\n\n\n\n\n\nLand cover was reclassified to retain grassland, shrubland, and cropland.\nAll masks were combined using logical AND operations to select suitable areas.\n\n\n\nEnvironmental factors (GST, GDD, GSP, slope, elevation, aspect, latitude) are extracted for the selected region and year from TerraClimate and SRTM datasets. These variables capture key climatic and topographic conditions affecting vineyard growth.\nvar factors = GrapeML.computeEnvironmentalFactors(region, year);\nA binary suitability mask is generated by applying defined threshold filters to the extracted factors. This step pre-screens environmentally favorable zones before machine learning.\nvar suitabilityMask = GrapeML.computeSuitabilityMask(factors);\nPositive samples are randomly generated within vineyard areas, while negative samples are drawn from unsuitable regions identified by the inverted mask. Samples are labeled and split randomly into 70% training and 30% testing subsets to ensure robust model evaluation.\nvar positivePoints = ee.FeatureCollection.randomPoints({region: vineyards.geometry(), points: 200});\nvar negativePoints = ee.FeatureCollection.randomPoints({region: region, points: 400});\nA Random Forest classifier with 50 trees is trained on the training data.\nvar classifier = ee.Classifier.smileRandomForest({numberOfTrees: 50}).train({...});\nThe trained classifier predicts a suitability probability surface across the study region. Pixels with scores above 0.7 are identified as highly suitable for vineyard development.\nvar suitabilityScore = featureImage.classify(probabilityClassifier);\nIf sample generation is insufficient, the basic environmental mask serves as a fallback to maintain prediction stability.\n\n\n\n\n\nIt supports users to freely switch between counties to view the 2010-2023 suitability area trend map, and loads all UK (county) suitability data asynchronously in the background to improve the speed of user experience.\nfunction initializeRegions() {\n  \n  // Build the initial UI\n  rebuildMainPanel()\n  // Start asynchronous background loading\n  continueLoadingRegions(0, kentIndex)\n}\n\n\n// Rebuild the main panel to display current region data\nfunction rebuildMainPanel() {\n  // Build UI controls\n  countyInput = ui.Textbox({value: currentCountyName})\n  \n  // Process current region data\n  currentRegion = getRegionGeometry(currentCountyName)\n  updateRegion()\n}\n\n// Update region data and trend chart\nfunction updateRegion() {\n  \n  // Create a batch of year data\n  var years = [2010...2023]\n  processBatch(0)\n  \n  // Batch processing: compute suitable area for each year\n  function processBatch(startIdx) {...\n    })\n}\n\nfunction showCountyTable() {\n  // Create a button grid for region selection\n  var grid = ui.Panel({layout: ui.Panel.Layout.flow('vertical')})\n  \n  // Add a button for each region\n  suitableNames.forEach(function(name) {\n    var button = ui.Button({\n      label: name,\n      onClick: function() {\n        currentCountyName = name\n        rebuildMainPanel()\n      }\n    })\n    grid.add(button)\n  })\n  \n  controlPanel.add(grid)\n}\n\n\n\nSelect County\n\n\n\n\n\n2010-2023 suitability area trend map\n\n\n\n\n\nProvides detailed layer controls to show/hide area boundaries, suitable areas, and existing vineyards.\n  var legendPanel = ui.Panel({\n    layout: ui.Panel.Layout.flow('vertical'),\n    style: {\n      padding: '8px',\n      margin: '0 0 8px 0',\n      backgroundColor: 'white'\n    }\n  });\n\n  checkboxRegion = ui.Checkbox({\n    label: '', \n    value: true, \n    onChange: function() {\n      showLoading(\"Updating map...\");\n      ee.Number(1).evaluate(function() {\n        updateRegion();\n        hideLoading();\n      });\n    }\n  });\n  var regionRow = ui.Panel([checkboxRegion, createLegendRow('orange', 'Region Boundary')], \n    ui.Panel.Layout.flow('horizontal'));\n  legendPanel.add(regionRow);\n\n  checkboxSuitability = ui.Checkbox({\n    label: '', \n    value: true, \n    onChange: function() {\n      showLoading(\"Updating map...\");\n      ee.Number(1).evaluate(function() {\n        updateRegion();\n        hideLoading();\n      });\n    }\n  });\n  var suitabilityRow = ui.Panel([checkboxSuitability, createLegendRow('#00FF00', 'Suitable Planting Areas')],\n    ui.Panel.Layout.flow('horizontal'));\n  legendPanel.add(suitabilityRow);\n\n  checkboxVineyards = ui.Checkbox({\n    label: '', \n    value: true, \n    onChange: function() {\n      showLoading(\"Updating map...\");\n      ee.Number(1).evaluate(function() {\n        updateRegion();\n        hideLoading();\n      });\n    }\n  });\n  var vineyardsRow = ui.Panel([checkboxVineyards, createLegendRow('purple', 'Existing Vineyards (2023)')],\n    ui.Panel.Layout.flow('horizontal'));\n  legendPanel.add(vineyardsRow);\n\n\n\nLayer Control\n\n\n\n\n\nAllows switching between single-year and multi-year analysis modes, resulting in a visualisation of suitable areas on a map. The multi-year analysis filters out areas on the map that are suitable for all years.\nvar singleYearButton = ui.Button({\n  label: 'Single Year View',\n  onClick: function() {\n    modeSelect = 'Single Year';\n    updateViewMode();\n  }\n});\n\nvar multiYearButton = ui.Button({\n  label: 'Multi-Year Analysis',\n  onClick: function() {\n    modeSelect = 'Multi-Year';\n    updateViewMode();\n  }\n});\n\n\n\n2015-2023 Muti-year Analysis\n\n\n\n\n\n\n\n\nSupports users to freely draw any area (e.g. rectangle, polygon) on the map, save and manage multiple custom-drawn areas.\n// Configure drawing tools\n  var drawingTools = mapPanel.drawingTools();\n  drawingTools.setLinked(false);\n  drawingTools.setDrawModes(['rectangle', 'polygon']);\n  drawingTools.setShown(false);\n  \n  // Add button to start drawing\n  var startDrawingButton = ui.Button('Start Drawing Region', function() {\n    drawingTools.layers().reset();\n    drawingTools.setShown(true);\n    drawingTools.setDrawModes(['polygon']);\n    drawingTools.setShape('polygon');\n    drawingTools.draw();\n    \n    showLoading(\"Please draw a region on the map\");\n    ee.Number(1).evaluate(function() {\n      hideLoading();\n    });\n  });\n  \n  var saveButton = ui.Button('Save Region', function() {\n    var drawn = drawingTools.layers().get(0);\n    if (!drawn) {\n      showLoading(\"Please draw a region first\");\n      ee.Number(1).evaluate(function() {\n        hideLoading();\n      });\n      return;\n    }\n    var geom = drawn.toGeometry();\n    var regionIndex = savedCompareGeometries.length + 1;\n    savedCompareGeometries.push(geom);\n    mapPanel.addLayer(geom, {color: 'blue'}, 'Comparison Region ' + regionIndex);\n    drawingTools.layers().reset();\n    drawingTools.setShown(false);\n    \n    showLoading(\"Region saved, please click 'Analyze Selected Region' button to analyze\");\n    ee.Number(1).evaluate(function() {\n      hideLoading();\n    });\n  });\n  \n  var analyzeButton = ui.Button('Analyze Selected Region', function() {\n    if (savedCompareGeometries.length === 0) {\n      showLoading(\"Please draw and save a region first\");\n      ee.Number(1).evaluate(function() {\n        hideLoading();\n      });\n\n\n\nDrawing Area\n\n\n\n\n\nFor each mapped area, a trend map of the area of suitability for each area was generated as well as providing the area of suitable planting and the area of highly suitable areas (&gt;70%) in 2023.\n// Get most recently saved region\n    var regionIndex = savedCompareGeometries.length;\n    var region = savedCompareGeometries[regionIndex - 1];\n    \n    showLoading(\"Analyzing region \" + regionIndex + \"...\");\n    \n    // Analyze suitability change of the region (2020-2023)\n    var years = [2020, 2021, 2022, 2023];\n    var yearResults = {};\n    var totalYears = years.length;\n    var processedYears = 0;\n    \n    // Analyze basic suitability for each year\n    years.forEach(function(year) {\n      // Use simple filtering conditions to calculate suitability area\n      var suitableMask = computeBasicSuitability(region, String(year));\n      \n      // Calculate suitable area size\n      suitableMask.multiply(ee.Image.pixelArea()).reduceRegion({\n        reducer: ee.Reducer.sum(),\n        geometry: region,\n        scale: 250,\n        maxPixels: 1e10\n      }).evaluate(function(result) {\n        var area = result ? result.mask / 1e6 : 0;\n        \n        yearResults[year] = {\n          suitable_area: area\n        };\n\n\n\nTrend and Statistical Analyses\n\n\n\n\n\nSupports detailed comparisons between two areas, outputs area comparison tables and text summaries (who is more suitable, who has more highly suitable area, etc.).\n // Get results of the last two regions\n      var region1Results = areaResults['region' + (savedCompareGeometries.length - 1)];\n      var region2Results = areaResults['region' + savedCompareGeometries.length];\n      \n      if (!region1Results || !region2Results) {\n        hideLoading();\n        showLoading(\"Unable to retrieve region data, please re-analyze\");\n        ee.Number(1).evaluate(function() {\n          hideLoading();\n        });\n        return;\n      }\n      \n      // Create comparison panel\n      var comparisonPanel = ui.Panel({\n        layout: ui.Panel.Layout.flow('vertical'),\n        style: {width: '100%', padding: '8px', border: '1px solid #ddd'}\n      });\n      \n      comparisonPanel.add(ui.Label('Region Comparison (2023)', {\n        fontWeight: 'bold',\n        textAlign: 'center',\n        margin: '0 0 8px 0'\n      }));\n      \n      // Create comparison table\n      var table = ui.Panel({\n        layout: ui.Panel.Layout.flow('vertical'),\n        style: {width: '100%'}\n      });\n// Add conclusion panel\n      var conclusionPanel = ui.Panel({\n        layout: ui.Panel.Layout.flow('vertical'),\n        style: {width: '100%', margin: '8px 0 0 0', padding: '8px', backgroundColor: '#f9f9f9'}\n      });\n      \n      var conclusion = '';\n      if (region1Results[2023].suitable_area &gt; region2Results[2023].suitable_area) {\n        conclusion = 'Region ' + (savedCompareGeometries.length - 1) + ' has a larger suitable planting area.\\n';\n      } else {\n        conclusion = 'Region ' + savedCompareGeometries.length + ' has a larger suitable planting area.\\n';\n      }\n      \n      var highSuitConclusion = '';\n      if (region1Results[2023].high_suitable_area &gt; region2Results[2023].high_suitable_area) {\n        highSuitConclusion = 'Region ' + (savedCompareGeometries.length - 1) + ' has a larger high suitability area,';\n        highSuitConclusion += ' ' + Math.abs(highSuitableDiff).toFixed(2) + 'km² more than region ' + savedCompareGeometries.length;\n      } else {\n        highSuitConclusion = 'Region ' + savedCompareGeometries.length + ' has a larger high suitability area,';\n        highSuitConclusion += ' ' + Math.abs(highSuitableDiff).toFixed(2) + 'km² more than region ' + (savedCompareGeometries.length - 1);\n      }\n      \n      conclusionPanel.add(ui.Label('Conclusion:', {fontWeight: 'bold'}));\n      conclusionPanel.add(ui.Label(conclusion));\n      conclusionPanel.add(ui.Label(highSuitConclusion, {color: '#D81B60', fontWeight: 'bold'}));\n      \n      comparisonPanel.add(conclusionPanel);\n\n\n\nSelect Two Areas\n\n\n\n\n\nComparison"
  },
  {
    "objectID": "readme.html",
    "href": "readme.html",
    "title": "",
    "section": "",
    "text": "Use this repository to host a website for your CASA0025 final project by following these stpes:\n\nclone this repository\ninstall quarto\nedit the ‘index.qmd’ file with the contents of your project\nusing terminal, navigate to the project directory and run “quarto render”\npush the changes to your github repository\non github, navigate to Settings&gt;Pages&gt;Build and Deployment. Make sure that under “Source” it says “deploy from branch”. Under “Branch”, select “Main” in the first dropdown and “Docs” under the second drop down. Then press “Save”\n\nYour website should now be available under https://{your_username}.github.io/{your_repo_name}"
  },
  {
    "objectID": "index.html#interaction-design",
    "href": "index.html#interaction-design",
    "title": "CASA00025 Group Project",
    "section": "",
    "text": "Feedback: The interface shows loading prompts like “Analyzing region…” to keep users informed of progress. Usability: The intuitive layout, with a fixed right panel and bottom-left legend, ensures easy navigation. Custom area selection includes clear instructions for quick user onboarding. Aesthetics: Functions are clearly separated, and high-contrast map layers, interactive charts, and color-coded maps improve data visualization. Consistency: Consistent styles across layers, buttons, and interactions, with uniform color schemes in the legend, aid map interpretation. Flexibility: Supports predefined county selections and user-drawn areas, with flexible switching between single-year and multi-year views for analysis."
  },
  {
    "objectID": "index.html#limitations",
    "href": "index.html#limitations",
    "title": "CASA00025 Group Project",
    "section": "",
    "text": "Asynchronous Loading: In order to increase the loading speed, the asynchronous loading method is chosen, but this requires a high level of user operation. The user needs to wait for the current operation to finish loading before proceeding to the next operation, otherwise it may lead to the error of loading the result multiple times.\nInsufficient machine learning training data: The current training sample size is relatively limited, which may lead to a decrease in prediction accuracy.\nLagging vineyard area data: The existing vineyard area data from OSM (Open Street Map) has some lag and incompleteness, which may affect the accuracy of the results."
  },
  {
    "objectID": "index.html#future-work",
    "href": "index.html#future-work",
    "title": "CASA00025 Group Project",
    "section": "",
    "text": "Expanding site selection factors: When selecting sites and comparing sites, more factors beyond the vineyard environment need to be considered, such as accessibility, regulations, and the surrounding environment. Grape Variety Classification: Implement classification of different grape varieties to enable more targeted vineyard area analysis and selection."
  },
  {
    "objectID": "index.html#references",
    "href": "index.html#references",
    "title": "CASA00025 Group Project",
    "section": "",
    "text": "Bai, Huiqing; Sun, Zhongxiang; Yao, Xuenan; Kong, Junhua; Wang, Yongjian; Zhang, Xiaoyu; Chen, Weiping; Fan, Peige; Li, Shaohua; Liang, Zhenchang. (2022) Viticultural Suitability Analysis Based on Multi-Source Data Highlights Climate-Change-Induced Decrease in Potential Suitable Areas: A Case Analysis in Ningxia, China. Remote sensing (Basel, Switzerland). 14 (15), 3717-.\nFraga, H; Malheiro, A C; Moutinho-pereira, J; Santos, J A. (2013) Future scenarios for viticultural zoning in Europe: ensemble projections and uncertainties. International journal of biometeorology. 57 (6), 909–925.\nNesbitt, Alistair, Dorling, Stephen, Jones, Richard, Smith, Dan K. E., Krumins, Marcus, Gannon, Kate E., Dorling, Lewis, Johnson, Zoë and Conway, Declan (2022) Climate change projections for UK viticulture to 2040: A focus on improving suitability for Pinot Noir. OENO On, 56 (3). 69–87.\nNesbitt, A., Dorling, S. and Lovett, A. (2018) ‘A suitability model for viticulture in England and Wales: opportunities for investment, sector growth and increased climate resilience’, Journal of Land Use Science, 13(4), pp. 414–438.\nUnwin, T. (1991) UK wine: from table wines to quality wine? Journal of wine research. 2 (2), 143–150."
  },
  {
    "objectID": "index.html#mapping-vineyard-suitability-in-the-uk-using-remote-sensing-and-machine-learning",
    "href": "index.html#mapping-vineyard-suitability-in-the-uk-using-remote-sensing-and-machine-learning",
    "title": "",
    "section": "",
    "text": "format: html author: SQLMister group bibliography: references.bib —"
  },
  {
    "objectID": "index.html#casa00025-group-project-mapping-vineyard-suitability-in-the-uk-using-remote-sensing-and-machine-learning",
    "href": "index.html#casa00025-group-project-mapping-vineyard-suitability-in-the-uk-using-remote-sensing-and-machine-learning",
    "title": "",
    "section": "",
    "text": "format: html author: SQLMister group bibliography: references.bib —"
  }
]